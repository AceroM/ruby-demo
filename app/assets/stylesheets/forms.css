.label {
  color: var(--neutral-600);
  font-size: 0.8125rem;
  font-weight: 300;
}

.required {
  font-size: 0.8125rem;
  font-weight: 300;
  color: var(--brand-300);
  margin-left: 2px;
}

.field {
  display: flex;
  flex-direction: column;

  &:not(:first-child) {
    margin-top: 0.75rem;
  }

  & > :not(:first-child) {
    margin-top: 0.25rem;
  }
}

.field__description {
  font-size: 0.8125rem;
  font-weight: 300;
  color: var(--neutral-600);
}

.field__error {
  color: var(--red-400);
  font-size: 0.75rem;
  font-weight: 300;
}

.field-row {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;

  & .field {
    flex: 1;
    margin-top: 0;

    & :not(.input-wrapper__icon) {
      width: 100%;
    }
  }

  &.field-row--between {
    align-items: start;

    & > * {
      display: flex;
    }

    & > :nth-child(1) {
      align-items: flex-start;
    }

    & > :nth-child(2) {
      align-items: end;
    }
  }
}

.input-wrapper {
  position: relative;

  & input {
    width: 100%;
  }

  &.input-wrapper--has-icon-left {
    & input {
      padding-left: 1.75rem;
    }
  }

  &.input-wrapper--has-icon-right {
    & input {
      padding-right: 1.75rem;
    }
  }

  &.input-wrapper--has-add-on {
    display: flex;

    & input {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

.input-wrapper__icon {
  background-color: var(--white);
  border: none;
  padding: 0.25rem 0.2rem;
  margin: 0.1rem;
  gap: 0.5rem;
  position: absolute;
  top: 0;
  bottom: 0;

  & svg,
  i {
    color: var(--neutral-600);
  }
}

.input-wrapper__icon--left {
  left: 0.5rem;
}

.input-wrapper__icon--right {
  right: 0.5rem;
}

.input-wrapper__add-on {
  border: 1px solid var(--neutral-200);
  border-top-left-radius: 0.625rem;
  border-bottom-left-radius: 0.625rem;
  font-size: 0.8125rem;
  display: inline-flex;
  align-items: center;
  color: var(--neutral-600);
  padding-inline: 0.625rem;
  border-right: none;
}

.input,
.select,
.textarea {
  font-size: 0.8125rem;
  border: 1px solid var(--neutral-200);
  background-color: var(--white);
  height: 2.25rem;
  padding: 0 0.625rem;
  border-radius: 0.625rem;
  transition: var(--border-shadow-transition);
  outline: none;

  &::placeholder {
    color: var(--neutral-400);
  }

  &:hover:not(:disabled) {
    border: var(--brand-border);
  }

  &:focus {
    border: var(--brand-border);
    box-shadow: var(--brand-shadow);
  }
}

.textarea {
  padding: 0.5rem 0 3rem 0.625rem;
  resize: none;
}

.select {
  appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none'><path d='M5 7.5L10 12.5L15 7.5' stroke='%237D7D7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>");
  background-repeat: no-repeat;
  background-position-x: 98%;
  background-position-y: 50%;
}

:not(select).input {
  &:read-only {
    background-color: var(--neutral-50);
    color: var(--neutral-600);
    cursor: not-allowed;
  }
}

:is(select).input {
  position: relative;
  appearance: none;

  &::after {
    content: "";
    position: absolute;
    top: 50%;
    right: 10px;
    border: 5px solid transparent;
    border-top-color: #000;
    /* Arrow color */
    transform: translateY(-50%);
    pointer-events: none;
  }
}

.checkbox {
  display: flex;
  width: fit-content;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.8125rem;
  color: var(--neutral-800);

  &:has(input:disabled) {
    color: var(--neutral-400);
    cursor: not-allowed;

    input {
      cursor: not-allowed;
    }
  }

  & input {
    margin-top: 0.0625rem;
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
    border: 1px solid var(--neutral-300);
    transition: var(--border-shadow-transition);
    outline: none;

    &:checked::after {
      content: "âœ“";
      color: var(--white);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 0.8125rem;
    }

    &:disabled {
      background-color: var(--white);
      color: var(--neutral-300);
    }

    &:not(:disabled) {
      &:hover {
        border: var(--brand-border);
      }

      &:focus {
        border: var(--brand-border);
        box-shadow: var(--brand-shadow);
      }

      &:checked {
        background-color: var(--brand-200);
        border-color: var(--brand-300);
        border: var(--brand-border);
      }
    }
  }

  & a {
    color: var(--brand-400);
    text-decoration: none;
    font-weight: 500;
  }
}
